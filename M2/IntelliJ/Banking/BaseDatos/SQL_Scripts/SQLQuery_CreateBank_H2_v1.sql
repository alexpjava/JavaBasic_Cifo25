

/*Adding indexes will speed up lookups on fields like NIF, NumeroCuenta, and CodigoPostal.
We can also enforce uniqueness where business logic demands it (e.g., a clientâ€™s NIF should be unique,
an account number should be unique, etc.).

Unique constraints on NumeroCuenta, NIF, and CodigoPostal.

Indexes on all foreign keys to speed up joins.

Schema BankAlPy isolated.

Full DB reset with DROP ALL OBJECTS DELETE FILES;.

*/

-- =========================================
-- Reset database completely (schema + data + files)
-- =========================================
DROP ALL OBJECTS;

-- Create schema for BankAlPy system
CREATE SCHEMA IF NOT EXISTS BankAlPy;
SET SCHEMA BankAlPy;

-- =========================================
-- Table creation
-- =========================================

CREATE TABLE Divisa (
    IdDivisa INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    Divisa CHAR(3) NOT NULL
);

CREATE TABLE TipoCuenta (
    IdTipoCuenta INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    Tipo VARCHAR(25) NOT NULL,
    FkDivisa INT
);

CREATE TABLE Cuenta (
    IdCuenta INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    NumeroCuenta VARCHAR(25) NOT NULL,
    FechaObertura DATE,
    Saldo DECIMAL(19,4)
);

CREATE TABLE Cliente (
    IdCliente INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    Nombre VARCHAR(25) NOT NULL,
    Apellido1 VARCHAR(30) NOT NULL,
    Apellido2 VARCHAR(30) NOT NULL,
    NIF CHAR(10) NOT NULL,
    FechaNacimiento DATE
);

CREATE TABLE CuentaCliente (
    IdCuentaCliente INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    TipoDeTitular VARCHAR(25) NOT NULL,
    FkCuenta INT,
    FkCliente INT,
    FkTipoCuenta INT
);

CREATE TABLE Transaccion (
    IdTransaccion INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    FechaTransaccion DATE,
    ValorTransaccion DECIMAL(19,4),
    FkCuentaDeposito INT,
    FkCuentaRetiro INT
);

CREATE TABLE Pais (
    IdPais INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    Pais VARCHAR(25) NOT NULL,
    Abreviacion VARCHAR(5) NOT NULL
);

CREATE TABLE Ciudad (
    IdCiudad INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    Ciudad VARCHAR(75) NOT NULL,
    FkPais INT
);

CREATE TABLE CodigoPostal (
    IdCodigoPostal INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    CodigoPostal VARCHAR(8)
);

CREATE TABLE CodigoPostalCiudad (
    IdCodigoPostalCiudad INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    FkCodigoPostal INT,
    FkCiudad INT
);

CREATE TABLE TipoCalle (
    IdTipoCalle INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    TipoCalle VARCHAR(25)
);

CREATE TABLE Direccion (
    IdDireccion INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    Nombre VARCHAR(50),
    Numero INT,
    Piso INT,
    Puerta CHAR(3),
    FkTipoCalle INT,
    FkCodigoPostal INT
);

CREATE TABLE ClienteDireccion (
    IdClienteDireccion INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    FkCliente INT,
    FkDireccion INT
);

-- =========================================
-- Constraints
-- =========================================

ALTER TABLE TipoCuenta
    ADD CONSTRAINT Fk_DivisaTipoCuenta FOREIGN KEY (FkDivisa) REFERENCES Divisa(IdDivisa);

ALTER TABLE CuentaCliente
    ADD CONSTRAINT Fk_CuentaCuentaCliente FOREIGN KEY (FkCuenta) REFERENCES Cuenta(IdCuenta);

ALTER TABLE CuentaCliente
    ADD CONSTRAINT Fk_ClienteCuentaCliente FOREIGN KEY (FkCliente) REFERENCES Cliente(IdCliente);

ALTER TABLE CuentaCliente
    ADD CONSTRAINT Fk_TipoCuentaCuentaCliente FOREIGN KEY (FkTipoCuenta) REFERENCES TipoCuenta(IdTipoCuenta);

ALTER TABLE Transaccion
    ADD CONSTRAINT Fk_CuentaDepositoTransaccion FOREIGN KEY (FkCuentaDeposito) REFERENCES Cuenta(IdCuenta);

ALTER TABLE Transaccion
    ADD CONSTRAINT Fk_CuentaRetiroTransaccion FOREIGN KEY (FkCuentaRetiro) REFERENCES Cuenta(IdCuenta);

ALTER TABLE Ciudad
    ADD CONSTRAINT Fk_PaisCiudad FOREIGN KEY (FkPais) REFERENCES Pais(IdPais);

ALTER TABLE CodigoPostalCiudad
    ADD CONSTRAINT Fk_CodigoPostalCodigoPostalCiudad FOREIGN KEY (FkCodigoPostal) REFERENCES CodigoPostal(IdCodigoPostal);

ALTER TABLE CodigoPostalCiudad
    ADD CONSTRAINT Fk_CiudadCodigoPostalCiudad FOREIGN KEY (FkCiudad) REFERENCES Ciudad(IdCiudad);

ALTER TABLE Direccion
    ADD CONSTRAINT Fk_TipoCalleDireccion FOREIGN KEY (FkTipoCalle) REFERENCES TipoCalle(IdTipoCalle);

ALTER TABLE Direccion
    ADD CONSTRAINT Fk_CodigoPostalDireccion FOREIGN KEY (FkCodigoPostal) REFERENCES CodigoPostal(IdCodigoPostal);

ALTER TABLE ClienteDireccion
    ADD CONSTRAINT Fk_ClienteClienteDireccion FOREIGN KEY (FkCliente) REFERENCES Cliente(IdCliente);

ALTER TABLE ClienteDireccion
    ADD CONSTRAINT Fk_DireccionClienteDireccion FOREIGN KEY (FkDireccion) REFERENCES Direccion(IdDireccion);

-- =========================================
-- Indexes
-- =========================================

-- Ensure unique account numbers
CREATE UNIQUE INDEX UQ_Cuenta_NumeroCuenta ON Cuenta (NumeroCuenta);

-- Ensure unique client NIF
CREATE UNIQUE INDEX UQ_Cliente_NIF ON Cliente (NIF);

-- Ensure unique postal codes
CREATE UNIQUE INDEX UQ_CodigoPostal_Codigo ON CodigoPostal (CodigoPostal);

-- Index foreign keys for faster joins
CREATE INDEX IX_TipoCuenta_FkDivisa ON TipoCuenta (FkDivisa);
CREATE INDEX IX_CuentaCliente_FkCuenta ON CuentaCliente (FkCuenta);
CREATE INDEX IX_CuentaCliente_FkCliente ON CuentaCliente (FkCliente);
CREATE INDEX IX_CuentaCliente_FkTipoCuenta ON CuentaCliente (FkTipoCuenta);
CREATE INDEX IX_Transaccion_FkCuentaDeposito ON Transaccion (FkCuentaDeposito);
CREATE INDEX IX_Transaccion_FkCuentaRetiro ON Transaccion (FkCuentaRetiro);
CREATE INDEX IX_Ciudad_FkPais ON Ciudad (FkPais);
CREATE INDEX IX_CodigoPostalCiudad_FkCodigoPostal ON CodigoPostalCiudad (FkCodigoPostal);
CREATE INDEX IX_CodigoPostalCiudad_FkCiudad ON CodigoPostalCiudad (FkCiudad);
CREATE INDEX IX_Direccion_FkTipoCalle ON Direccion (FkTipoCalle);
CREATE INDEX IX_Direccion_FkCodigoPostal ON Direccion (FkCodigoPostal);
CREATE INDEX IX_ClienteDireccion_FkCliente ON ClienteDireccion (FkCliente);
CREATE INDEX IX_ClienteDireccion_FkDireccion ON ClienteDireccion (FkDireccion);
